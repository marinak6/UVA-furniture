version: "3"
services:
  microservices:
    image: tp33/django
    container_name: microservices
    external_links:
      - mysql:db
    volumes:
      - ./microservices:/app
    ports:
      - "8001:8000"
    networks:
      - backend
      - service_mesh
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py loaddata fixtures/db.json && mod_wsgi-express start-server --working-directory . --reload-on-changes ./microservices/wsgi.py"

  exp:
    image: tp33/django
    container_name: exp
    networks:
      - service_mesh
      - public
    ports:
      - "8002:8000"
    volumes:
      - ./exp:/app
    command: "mod_wsgi-express start-server --reload-on-changes ./exp/wsgi.py"
    
  web:
    image: tp33/django
    container_name: web
    networks:
      - public
    ports:
      - "8000:8000"
    volumes:
      - ./web:/app
    command: "mod_wsgi-express start-server --reload-on-changes ./web/wsgi.py"

  kafka:
   image: spotify/kafka
   container_name: kafka
   networks:
      - batch_network
      - service_mesh
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka
   
  es:
    image: elasticsearch:7.4.0
    container_name: es
    environment:
        - discovery.type=single-node
    networks:
        - service_mesh
        - mod_exp_network
    ports:
        - "9200:9200"

  batch:
    image: tp33/django
    container_name: batch
    networks:
        - batch_network

networks:
  backend:
  service_mesh:
  public:
  batch_network:
  mod_exp_network:
